# This is an example of Makefile

# global variables
BUILD_DIR       := build
DIST_DIR        := dist
PACKAGE         := cv
# latex variables
CHKTEX          := chktex
LATEX_MAIN_SRCS := $(wildcard *.tex)
LATEXMK         := latexmk
PDF_READER      := sumatrapdf
NPM             := npm
# python variables
LOCALES_DIR     :=
# git variables
VERSION_EXP     := [0-9\.]+
VERSION_FILE    := .version

ifeq (,$(filter clean-deep,$(MAKECMDGOALS)))
-include .make/misc.mk
-include .make/latex.mk
-include .make/git.mk
-include .make/py.mk
endif

# list of all include files
MAKE_INCLUDES = $(shell grep -E '^-include .*\s?$$' Makefile | awk 'BEGIN {FS = " "}; {print $$2}')
# this will download all include files (if they already don't exist)
$(MAKE_INCLUDES):
	@mkdir -p $$(dirname $@); \
	NAME=$$(basename $@); \
	URL=$$(echo "https://raw.githubusercontent.com/jamesbrond/jamesbrond/main/Makefile/$$NAME"); \
	echo "get $$URL"; \
	curl -s -H 'Cache-Control: no-cache, no-store' $${URL} -o $@


PHONY: clean clean-deep clean-release compile release lint
.DEFAULT_GOAL := dist


clean:: ## Cleans leftover build files but leaves dependencies untouched
	@$(call prompt-info,$@ done)

clean-release:: ## Cleans generated outputs but leaves dependencies untouched

clean-deep:: clean clean-release ## Cleans up the entire solutions
	@-rm -rf $(BUILD_DIR)
	@-rm -rf $(DIST_DIR)
	@-rm -rf .make
	@$(call prompt-info,$@ done)

lint:: ## Lint solution
	@$(call prompt-info,$@ done)

compile:: ## Compile the entire solution
	@$(call prompt-info,$@ done)

release:: ## Create distributable
	@$(call prompt-info,$@ done)

# ~@:-]